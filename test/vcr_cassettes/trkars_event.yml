---
http_interactions:
- request:
    method: get
    uri: https://trka.rs/event/210/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
      Host:
      - trka.rs
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx/1.18.0 (Ubuntu)
      Date:
      - Wed, 19 May 2021 04:43:08 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Cookie, Accept-Language
      Content-Language:
      - sr-rs
      Set-Cookie:
      - csrftoken=m0RTsqXqjl8XYXetFOoEceCXpsWiwlKdb3letIbtVIyu97goftTp9BGhW9SVE8KT;
        expires=Wed, 18 May 2022 04:43:08 GMT; Max-Age=31449600; Path=/; SameSite=Lax
      P3p:
      - CP="ALL DSP COR PSAa PSDa OUR NOR ONL UNI COM NAV"
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 19 May 2021 04:43:08 GMT
recorded_with: VCR 6.0.0
