<%#
  f - form builder
  f.object.model need to accepts_nested_attributes_for and allow_params for Requirement
%>
<%
   f.object.build_requirement if f.object.requirement.blank?
%>
<div data-controller='activate' data-activate-selector='fieldset'>
  <div class='form-inline'>
    <%= f.radio_button :existing_or_new, 'existing', checked: f.object.existing_or_new.blank? || f.object.existing_or_new == 'existing', label: t('pick_existing'), 'data-action': 'activate#enableDisableForValue' %>
    <%= f.radio_button :existing_or_new, 'new', label: t('create_new'), 'data-action': 'activate#enableDisableForValue' %>
  </div>
  <fieldset data-activate-value='existing' class='remote-form__border-section d-none-display <%= 'active' unless f.object.existing_or_new == 'new' %>' <%= 'disabled' if f.object.existing_or_new == 'new' %>>
    <%= f.select :requirement_id, options_from_collection_for_select(Requirement.all, :id, :name, f.object.requirement_id), prompt: true, disabled: f.object.existing_or_new == 'new' %>
  </fieldset>
  <fieldset data-activate-value='new' class='remote-form__border-section d-none-display <%= 'active' if f.object.existing_or_new == 'new' %>' <%= 'disabled' unless f.object.existing_or_new == 'new' %>>
    <%= f.fields_for :requirement, include_id: false do |ff| %>
      <%= render 'admin/requirements/form_fields', f: ff, disabled: f.object.existing_or_new != 'new' %>
    <% end %>
  </fieldset>
</div>
